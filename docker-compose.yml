
services:
  # Our monorepo app service
  app:
    build:
      context: .
      dockerfile: Dockerfile
      network: host
    ports:
      - "${APP_PORT:-3000}:3000"
      - "8081:8081"
    volumes:
      - .:/app
      - /app/node_modules
    env_file:
      - .env

    depends_on:
      - kong

  # Supabase Local Stack
  db:
    image: supabase/postgres:15.1.0.118
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "54322:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on: []  # Removed vector dependency

  kong:
    image: kong:2.8.1
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
    restart: always
    volumes:
      - ./supabase/kong:/etc/kong
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: "/etc/kong/kong.yml"
      KONG_PROXY_LISTEN: "0.0.0.0:8000"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
    depends_on:
      - auth
      - rest
      - storage
      - realtime

  auth:
    image: supabase/gotrue:v2.120.0
    restart: always
    env_file: .env
    depends_on:
      db:
        condition: service_healthy

  rest:
    image: postgrest/postgrest:v11.2.2
    restart: always
    env_file: .env
    depends_on:
      db:
        condition: service_healthy

  realtime:
    image: supabase/realtime:v2.24.2
    restart: always
    env_file: .env
    depends_on:
      db:
        condition: service_healthy

  storage:
    image: supabase/storage-api:v0.41.6
    restart: always
    env_file: .env
    depends_on:
      db:
        condition: service_healthy

  # Temporarily disabling vector service since it's causing startup issues
  # vector:
  #   image: timberio/vector:0.28.1-alpine
  #   restart: unless-stopped
  #   volumes:
  #     - ./supabase/vector/vector.yml:/etc/vector/vector.yml:ro,z
  #     - /var/run/docker.sock:/var/run/docker.sock:ro,z
  #   healthcheck:
  #     test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://vector:9001/health"]
  #     timeout: 5s
  #     interval: 5s
  #     retries: 3
  #   command: ["--config", "/etc/vector/vector.yml"]
  #   security_opt:
  #     - "label=disable"

  analytics:
    image: supabase/logflare:1.14.2
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "http://localhost:4000/health"]
      timeout: 5s
      interval: 5s
      retries: 10
    depends_on:
      db:
        condition: service_healthy
    environment:
      LOGFLARE_NODE_HOST: 127.0.0.1
      DB_USERNAME: supabase_admin
      DB_DATABASE: _supabase
      DB_HOSTNAME: ${POSTGRES_HOST}
      DB_PORT: ${POSTGRES_PORT}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_SCHEMA: _analytics
      POSTGRES_BACKEND_URL: postgresql://supabase_admin:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/_supabase
      POSTGRES_BACKEND_SCHEMA: _analytics
      LOGFLARE_FEATURE_FLAG_OVERRIDE: multibackend=true

  meta:
    image: supabase/postgres-meta:v0.89.3
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      PG_META_PORT: 8080
      PG_META_DB_HOST: ${POSTGRES_HOST}
      PG_META_DB_PORT: ${POSTGRES_PORT}
      PG_META_DB_NAME: ${POSTGRES_DB}
      PG_META_DB_USER: supabase_admin
      PG_META_DB_PASSWORD: ${POSTGRES_PASSWORD}

volumes:
  db_data:
