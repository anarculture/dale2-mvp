version: '3.8'

services:
  # Our monorepo app service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${APP_PORT:-3000}:3000"
      - "8081:8081"
    volumes:
      - .:/app
      - /app/node_modules
    env_file:
      - .env
    environment:
      - SUPABASE_URL=http://kong:8000
      - SUPABASE_ANON_KEY=${ANON_KEY}
    depends_on:
      - kong

  # Supabase Local Stack
  db:
    image: supabase/postgres:15.1.0.118
    restart: always
    volumes:
      - ./supabase/db/init:/docker-entrypoint-initdb.d
      - db_data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "54322:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  kong:
    image: kong:2.8.1
    restart: always
    volumes:
      - ./supabase/kong/kong.yml:/etc/kong/kong.yml
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: "/etc/kong/kong.yml"
      KONG_PROXY_LISTEN: "0.0.0.0:8000"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
    ports:
      - "8000:8000"
      - "8001:8001"
    depends_on:
      - auth
      - rest
      - storage
      - realtime

  auth:
    image: supabase/gotrue:v2.120.0
    restart: always
    env_file: .env
    depends_on:
      db:
        condition: service_healthy

  rest:
    image: postgrest/postgrest:v11.2.2
    restart: always
    env_file: .env
    depends_on:
      db:
        condition: service_healthy

  realtime:
    image: supabase/realtime:v2.24.2
    restart: always
    env_file: .env
    depends_on:
      db:
        condition: service_healthy

  storage:
    image: supabase/storage-api:v0.41.6
    restart: always
    env_file: .env
    depends_on:
      db:
        condition: service_healthy

volumes:
  db_data:
